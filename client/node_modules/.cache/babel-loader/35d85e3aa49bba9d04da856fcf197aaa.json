{"ast":null,"code":"var _jsxFileName = \"/home/roussebe/dev/WakeUpCoach/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Routes from \"./components/Routes\";\nimport { UidContext } from \"./components/AppContext\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.actions\";\nimport { getHabits } from \"./actions/habit.actions\";\nimport { getRituals } from \"./actions/ritual.actions\";\nimport logger from 'redux-logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!process.env.REACT_APP_API_URL) {\n  process.env.REACT_APP_API_URL = \"/\";\n}\n\nconst App = () => {\n  _s();\n\n  const [uid, setUid] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}jwtid`,\n        withCredentials: true\n      }).then(res => {\n        console.log(\"Received\", res);\n        setUid(res.data);\n      }).catch(err => {\n        console.log(\"No token\", err);\n      });\n    };\n\n    fetchToken();\n    console.log(\"uid\", uid);\n\n    if (uid) {\n      console.log(\"Get the informations\");\n      dispatch(getUser(uid));\n      dispatch(getHabits(20));\n      dispatch(getRituals(20));\n    }\n  }, [uid, dispatch]);\n  return /*#__PURE__*/_jsxDEV(UidContext.Provider, {\n    value: uid,\n    children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R0Qmc0mLUNgYF+yuafgtqFbhwwI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/roussebe/dev/WakeUpCoach/client/src/App.js"],"names":["React","useEffect","useState","Routes","UidContext","axios","useDispatch","getUser","getHabits","getRituals","logger","process","env","REACT_APP_API_URL","App","uid","setUid","dispatch","fetchToken","method","url","withCredentials","then","res","console","log","data","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,IAAI,CAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,EACA;AACEF,EAAAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,GAAhC;AACD;;AAED,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMe,QAAQ,GAAGX,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAMb,KAAK,CAAC;AACVc,QAAAA,MAAM,EAAE,KADE;AAEVC,QAAAA,GAAG,EAAG,GAAET,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OAF5B;AAGVQ,QAAAA,eAAe,EAAE;AAHP,OAAD,CAAL,CAKHC,IALG,CAKGC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAa,UAAb,EAA0BF,GAA1B;AACAP,QAAAA,MAAM,CAACO,GAAG,CAACG,IAAL,CAAN;AACD,OARG,EASHC,KATG,CASIC,GAAD,IAAS;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,GAAxB;AACD,OAXG,CAAN;AAYD,KAbD;;AAeAV,IAAAA,UAAU;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAoBV,GAApB;;AACA,QAAIA,GAAJ,EAAS;AACPS,MAAAA,OAAO,CAACC,GAAR,CAAa,sBAAb;AACAR,MAAAA,QAAQ,CAACV,OAAO,CAACQ,GAAD,CAAR,CAAR;AACAE,MAAAA,QAAQ,CAACT,SAAS,CAAC,EAAD,CAAV,CAAR;AACAS,MAAAA,QAAQ,CAACR,UAAU,CAAC,EAAD,CAAX,CAAR;AACD;AACF,GAxBQ,EAwBN,CAACM,GAAD,EAAME,QAAN,CAxBM,CAAT;AA0BA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEF,GAA5B;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAMD,G;UAEaR,W;;;KAFbQ,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Routes from \"./components/Routes\";\nimport { UidContext } from \"./components/AppContext\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.actions\";\nimport { getHabits } from \"./actions/habit.actions\";\nimport { getRituals } from \"./actions/ritual.actions\";\n\nimport logger from 'redux-logger'\n\nif( ! process.env.REACT_APP_API_URL )\n{\n  process.env.REACT_APP_API_URL = \"/\"\n}\n\nconst App = () => {\n  const [uid, setUid] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}jwtid`,\n        withCredentials: true,\n      })\n        .then((res) => {\n          console.log (\"Received\" , res )\n          setUid(res.data);\n        })\n        .catch((err) => {\n          console.log(\"No token\", err);\n        })\n    };\n\n    fetchToken();\n    console.log( \"uid\", uid )\n    if (uid) {\n      console.log( \"Get the informations\" )\n      dispatch(getUser(uid));\n      dispatch(getHabits(20));\n      dispatch(getRituals(20));\n    }\n  }, [uid, dispatch]);\n\n  return (\n    <UidContext.Provider value={uid}>\n      <Routes />\n    </UidContext.Provider>\n  );\n\n\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}